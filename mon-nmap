#!/bin/bash
# mon-nmap ‚Äî scan agressif (-A) + summary.txt et summary.md (Hugo, sans emojis)
# √âtapes : [1] TCP full -> [2] Aggressive (-A) -> [3] UDP (optionnel)
# R√®gles : on ignore 'open|filtered' (on ne garde que 'udp ... open' strict)

set -euo pipefail

VERSION="mon-nmap v2025.09.04-md-r6"
if [[ "${1:-}" == "--version" ]]; then echo "$VERSION"; exit 0; fi
if [[ "${1:-}" == "--help" ]]; then
  cat <<EOF
$VERSION
Usage: $(basename "$0") [--udp-all] <IP_CIBLE>
Options:
  --udp-all     Scan UDP complet (-p-) au lieu du top 20
  --version     Afficher la version
  --help        Afficher cette aide
EOF
  exit 0
fi

# Couleurs (terminal)
RED='\033[1;31m'; GREEN='\033[1;32m'; YELLOW='\033[1;33m'
CYAN='\033[1;36m'; BLUE='\033[1;34m'; BOLD='\033[1m'; NC='\033[0m'

# Option : --udp-all
FULL_UDP=false
if [[ "${1:-}" == "--udp-all" ]]; then FULL_UDP=true; shift; fi

# IP cible
if [ "$#" -ne 1 ]; then
  echo -e "${RED}‚ùå Usage: ${BOLD}$(basename "$0") [--udp-all] <IP_CIBLE>${NC}"
  exit 1
fi
IP=$1

# Dossiers/fichiers
DOSSIER="nmap_$IP"
mkdir -p "$DOSSIER"
F1="$DOSSIER/1-port_scan.txt"
F2="$DOSSIER/2-aggressive_scan.txt"
F3="$DOSSIER/3-udp_scan.txt"
FSUM_TXT="$DOSSIER/summary.txt"
FSUM_MD="$DOSSIER/summary.md"

START_TIME=$SECONDS
echo -e "${BLUE}üîç Initialisation du scan Nmap sur ${BOLD}$IP${NC}"

# [1] TCP full port scan
echo -e "${YELLOW}[1] Scan de tous les ports TCP (1-65535)...${NC}"
nmap -p- --min-rate 10000 -T4 --max-retries 3 -oN "$F1" "$IP" > /dev/null 2>&1
TCP_OPEN_LINES="$(LC_ALL=C grep -E '^[[:space:]]*[0-9]+/tcp[[:space:]]+open([[:space:]]|$)' "$F1" || true)"
PORTS="$(printf '%s\n' "$TCP_OPEN_LINES" | cut -d'/' -f1 | paste -sd, - 2>/dev/null || true)"
if [[ -z "${PORTS:-}" ]]; then
  echo -e "${RED}‚ùå Aucun port TCP ouvert d√©tect√©.${NC}"
  exit 1
fi
echo -e "${GREEN}‚úî Ports TCP d√©tect√©s : ${BOLD}$PORTS${NC}"

# [2] Aggressive (-A)
echo -e "${YELLOW}[2] Scan agressif avec d√©tection OS (-A)...${NC}"
nmap -A -T4 -p"$PORTS" --max-retries 3 -oN "$F2" "$IP" > /dev/null 2>&1

# [3] UDP
if $FULL_UDP; then
  echo -e "${YELLOW}[3] Scan UDP complet (-p-)...${NC}"
  nmap -sU -p- -T4 --max-retries 3 --scan-delay 5ms --host-timeout 20m -oN "$F3" "$IP"
else
  echo -e "${YELLOW}[3] Scan UDP top 20...${NC}"
  nmap -sU --top-ports 20 -T4 --max-retries 2 --host-timeout 10m -oN "$F3" "$IP" > /dev/null 2>&1
fi
echo -e "${GREEN}‚úî Scan UDP termin√©.${NC}"
echo -e "${GREEN}${BOLD}‚úî Tous les scans sont termin√©s !${NC}"

# Extractions
OS_LINE="$(grep -i 'OS details:' "$F2" | head -n1 | sed 's/OS details:[[:space:]]*//I')"
UDP_OPEN_ONLY="$(LC_ALL=C grep -E '^[[:space:]]*[0-9]+/udp[[:space:]]+open([[:space:]]|$)' "$F3" || true)"
TCP_OPEN_FROM_F2="$(LC_ALL=C grep -E '^[[:space:]]*[0-9]+/tcp[[:space:]]+open([[:space:]]|$)' "$F2" || true)"
TCP_CSV="$(printf '%s\n' "$TCP_OPEN_FROM_F2" | cut -d'/' -f1 | paste -sd, - 2>/dev/null || true)"
UDP_CSV=""
[[ -n "$UDP_OPEN_ONLY" ]] && UDP_CSV="$(printf '%s\n' "$UDP_OPEN_ONLY" | cut -d'/' -f1 | paste -sd, - 2>/dev/null || true)"

# Affichage terminal
echo -e "\n${CYAN}${BOLD}üìÑ R√âSUM√â DES SERVICES TCP D√âTECT√âS :${NC}\n"
i=1; inside_block=false
while IFS= read -r line; do
  if [[ "$line" =~ ^[0-9]+/tcp[[:space:]]+open([[:space:]]|$) ]]; then
    printf "  [#%d] %s\n" "$i" "$line"
    i=$((i+1)); inside_block=true
  elif [[ "$inside_block" == true && "$line" =~ ^[\|_] ]]; then
    line=${line#|_}; line=${line#|}; printf "      ‚Üí %s\n" "$line"
  else
    inside_block=false
  fi
done < "$F2"

if [[ -n "$UDP_OPEN_ONLY" ]]; then
  echo -e "\n${CYAN}${BOLD}üìÑ R√âSUM√â DES SERVICES UDP D√âTECT√âS :${NC}\n"
  echo "$UDP_OPEN_ONLY" | nl -w2 -s'. ' | while read -r line; do
    NUM=$(echo "$line" | cut -d'.' -f1)
    printf "  [#%s] %s\n" "$NUM" "$(echo "$line" | cut -d' ' -f2-)"
  done
fi

if [[ -n "$OS_LINE" ]]; then
  echo -e "\n${BLUE}${BOLD}üñ•Ô∏è  D√©tection du syst√®me d‚Äôexploitation :${NC} $OS_LINE"
else
  echo -e "\n${BLUE}üñ•Ô∏è  OS non identifi√© par Nmap.${NC}"
fi

# summary.txt (texte)
{
  echo "==== R√©sum√© $IP ($(date '+%F %T')) ===="
  echo
  echo "[1-port_scan] TCP open :"
  [[ -n "$TCP_OPEN_LINES" ]] && echo "$TCP_OPEN_LINES"
  echo
  echo "[2-aggressive_scan] D√©tails (open) :"
  LC_ALL=C grep -E '^[[:space:]]*[0-9]+/(tcp|udp)[[:space:]]+open([[:space:]]|$)' "$F2" || true
  echo
  if [[ -n "$OS_LINE" ]]; then
    echo "OS: $OS_LINE"
    echo
  fi
  if [[ -n "$UDP_OPEN_ONLY" ]]; then
    echo "[3-udp_scan] UDP ouverts :"
    echo "$UDP_OPEN_ONLY"
    echo
  fi
  echo "R√©sum√© des services d√©tect√©s (TCP) :"
  i=1; inside_block=false
  while IFS= read -r line; do
    if [[ "$line" =~ ^[0-9]+/tcp[[:space:]]+open([[:space:]]|$) ]]; then
      printf "  [#%d] %s\n" "$i" "$line"
      i=$((i+1)); inside_block=true
    elif [[ "$inside_block" == true && "$line" =~ ^[\|_] ]]; then
      line=${line#|_}; line=${line#|}; printf "      ‚Üí %s\n" "$line"
    else
      inside_block=false
    fi
  done < "$F2"
  echo
  [[ -n "$TCP_CSV" ]] && { echo "TCP open (CSV) : $TCP_CSV"; echo; }
  [[ -n "$UDP_CSV" ]] && { echo "UDP open (CSV) : $UDP_CSV"; echo; }
} > "$FSUM_TXT"

# summary.md (Hugo) ‚Äî adapt√© √† ta structure : "## √ânum√©ration" (dans Hugo) puis "### Scan initial"
{
  echo "### Scan initial"
  echo
  echo "#### TCP full port scan"
  echo '```text'
  [[ -n "$TCP_OPEN_LINES" ]] && echo "$TCP_OPEN_LINES"
  echo '```'
  echo
  echo "#### Aggressive scan (-A)"
  echo '```text'
  inside_block=false
  while IFS= read -r line; do
    if [[ "$line" =~ ^[0-9]+/tcp[[:space:]]+open([[:space:]]|$) ]]; then
      printf "%s\n" "$line"
      inside_block=true
    elif [[ "$inside_block" == true && "$line" =~ ^[\|_] ]]; then
      line=${line#|_}; line=${line#|}
      # prot√®ge les empreintes hex (√©vite des conversions en emojis)
      if [[ "$line" =~ ([0-9A-Fa-f]{2}:){4,}[0-9A-Fa-f]{2} ]]; then
        printf "      ‚Üí \`%s\`\n" "$line"
      else
        printf "      ‚Üí %s\n" "$line"
      fi
    else
      inside_block=false
    fi
  done < "$F2"
  echo '```'
  echo
  if [[ -n "$OS_LINE" ]]; then
    echo "**OS d√©tect√© :**  "
    echo "\`$OS_LINE\`"
    echo
  else
    echo "**OS d√©tect√© :**  "
    echo "\`Non identifi√©\`"
    echo
  fi
  echo "#### UDP"
  if [[ -n "$UDP_OPEN_ONLY" ]]; then
    echo '```text'
    echo "$UDP_OPEN_ONLY"
    echo '```'
  else
    if $FULL_UDP; then
      echo "*(aucun port \`open\` strict d√©tect√© ; scan complet \`-p-\`)*"
    else
      echo "*(aucun port \`open\` strict d√©tect√© ; scan top 20)*"
    fi
  fi
  echo
  echo "---"
  echo
  echo "#### R√©sum√© des services d√©tect√©s (TCP)"
  i=1; inside_block=false
  while IFS= read -r line; do
    if [[ "$line" =~ ^[0-9]+/tcp[[:space:]]+open([[:space:]]|$) ]]; then
      echo "$i. **$line**"
      i=$((i+1)); inside_block=true
    elif [[ "$inside_block" == true && "$line" =~ ^[\|_] ]]; then
      line=${line#|_}; line=${line#|}
      if [[ "$line" =~ ([0-9A-Fa-f]{2}:){4,}[0-9A-Fa-f]{2} ]]; then
        echo "   ‚Üí \`$line\`  "
      else
        echo "   ‚Üí $line  "
      fi
    else
      inside_block=false
    fi
  done < "$F2"
  echo
  echo "---"

  echo
  echo "#### Vue synth√©tique"
  echo "- **TCP ouverts :** \`${TCP_CSV:-}\`"
  if [[ -n "$UDP_CSV" ]]; then
    echo "- **UDP ouverts :** \`${UDP_CSV}\`"
  else
    echo "- **UDP ouverts :** *(aucun open strict)*"
  fi
} > "$FSUM_MD"

# Fin
ELAPSED=$((SECONDS - START_TIME)); MINS=$((ELAPSED/60)); SECS=$((ELAPSED%60))
echo -e "\n${CYAN}üßæ  R√©sum√© texte :${NC} ${BOLD}$FSUM_TXT${NC}"
echo -e "${CYAN}üßæ  R√©sum√© Markdown :${NC} ${BOLD}$FSUM_MD${NC}"
echo -e "${BLUE}üìÅ R√©sultats complets : ${BOLD}$DOSSIER/${NC}"
echo -e "${GREEN}‚è±Ô∏è  Dur√©e totale du scan : ${BOLD}${MINS}m ${SECS}s${NC}"
